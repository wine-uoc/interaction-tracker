[{"id":"11d79ac7.6abe25","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"b2551e81.163a8","type":"tab","label":"Postgres example flows","disabled":false,"info":"# Postgres example flows\n\nThese flows demonstrate the use of the\n`node-red-contrib-postgres-multi` node.\n\n## Setup\n\nFor the flows in this tab,\nyou'll need a PostgreSQL table like so:\n\n    begin;\n    create table mytable\n    (\n        id integer not null,\n        message character varying(20)\n    );\n    create unique index on mytable (id);\n    commit;\n\nThen you'll need to configure the postgres\nblocks to have access to this database and table.\n"},{"id":"7cd9da78.451ca4","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"6f969198.b8f1d","type":"postgresdb","z":"","hostname":"172.17.0.3","port":"5432","db":"track","ssl":false},{"id":"9a268890.30ac48","type":"comment","z":"b2551e81.163a8","name":"Reset","info":"This flow clears any contents from\nthe `mytable` table and inserts a single\nrecord:\n\n    id   message\n    1    'hello world'\n","x":90,"y":40,"wires":[]},{"id":"d8e25f1.6efe0a","type":"inject","z":"b2551e81.163a8","name":"click me","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":120,"y":100,"wires":[["3220a74b.de6318"]]},{"id":"3220a74b.de6318","type":"function","z":"b2551e81.163a8","name":"prepare","func":"\nmsg.payload = [\n    {\n        query: 'begin',\n    },\n    {\n        query: 'delete from mytable',\n    },\n    {\n        query: 'insert into mytable (id, message) values ($1, $2)',\n        params: [1, 'hello world'],\n    },\n    {\n        query: 'select * from mytable',\n        output: true,\n    },\n    {\n        query: 'commit',\n    },\n];\n\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":100,"wires":[["1350565a.ea461a"]]},{"id":"1350565a.ea461a","type":"postgres","z":"b2551e81.163a8","postgresdb":"6f969198.b8f1d","name":"","output":true,"outputs":1,"x":480,"y":100,"wires":[["37818a2e.ab5576"]]},{"id":"37818a2e.ab5576","type":"debug","z":"b2551e81.163a8","name":"","active":true,"console":"false","complete":"false","x":679.5,"y":100,"wires":[]},{"id":"f0f89ba8.61b2d8","type":"comment","z":"b2551e81.163a8","name":"Demo","info":"This flow demonstrates:\n\n* transactions and auto-commit queries\n* positional arguments (i.e. $argName)\n* query output from multiple queries\n","x":86.5,"y":182,"wires":[]},{"id":"c4fc1e07.45dbe","type":"inject","z":"b2551e81.163a8","name":"click me","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":120,"y":240,"wires":[["42cc82ee.4d6e5c"]]},{"id":"42cc82ee.4d6e5c","type":"function","z":"b2551e81.163a8","name":"prepare","func":"\nmsg.payload = [\n    {\n        query: 'begin',\n    },\n    {\n        query: 'delete from mytable',\n    },\n    {\n        query:\n            'insert into mytable (id, message) ' +\n            'values ($foo, $bar), ($baz, $boop)',\n        params: {\n            foo: 10,\n            bar: 'hello',\n            baz: 20,\n            boop: 'world',\n        },\n    },\n    {\n        query: 'commit',\n    },\n    {\n        query: 'select * from mytable',\n        output: true,\n    },\n    {\n        query: 'insert into mytable (id, message) values (30, \\'xtra\\')',\n    },\n    {\n        query: 'select message from mytable order by id',\n        output: true,\n    },\n];\n\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":240,"wires":[["a8ce065e.54e568"]]},{"id":"a8ce065e.54e568","type":"postgres","z":"b2551e81.163a8","postgresdb":"6f969198.b8f1d","name":"","output":true,"outputs":1,"x":480,"y":240,"wires":[["41975357.e9ae3c"]]},{"id":"41975357.e9ae3c","type":"debug","z":"b2551e81.163a8","name":"","active":true,"console":"false","complete":"false","x":679.5,"y":240,"wires":[]},{"id":"7a9e5d28.145ac4","type":"comment","z":"b2551e81.163a8","name":"Rollback","info":"If you start a transaction and don't commit it,\nyour changes will not be saved.","x":100,"y":320,"wires":[]},{"id":"639fbcb1.c9bef4","type":"inject","z":"b2551e81.163a8","name":"click me","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":120,"y":380,"wires":[["66164afe.c93994"]]},{"id":"66164afe.c93994","type":"function","z":"b2551e81.163a8","name":"prepare","func":"\nmsg.payload = [\n    {\n        query: 'begin',\n    },\n    {\n        query: 'delete from mytable',\n    },\n    {\n        query:\n            'insert into mytable (id, message) ' +\n            'values ($foo, $bar), ($baz, $boop), ($bing, $bang)',\n        params: {\n            foo: 10,\n            bar: 'one does not simply',\n            baz: 20,\n            boop: 'begin',\n            bing: 30,\n            bang: 'but not commit',\n        },\n    },\n    {\n        query: 'select message from mytable order by id',\n        output: true,\n    },\n];\n\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":380,"wires":[["f97111f9.f859c"]]},{"id":"f97111f9.f859c","type":"postgres","z":"b2551e81.163a8","postgresdb":"6f969198.b8f1d","name":"","output":true,"outputs":1,"x":480,"y":380,"wires":[["c96416ac.3ca028","eeab21bd.8dd28"]]},{"id":"c96416ac.3ca028","type":"debug","z":"b2551e81.163a8","name":"","active":true,"console":"false","complete":"false","x":679.5,"y":380,"wires":[]},{"id":"eeab21bd.8dd28","type":"function","z":"b2551e81.163a8","name":"check","func":"\nmsg.payload = [\n    {\n        query: 'select message from mytable order by id',\n        output: true,\n    },\n];\n\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":460,"wires":[["89ca8f5c.818c9"]]},{"id":"89ca8f5c.818c9","type":"postgres","z":"b2551e81.163a8","postgresdb":"6f969198.b8f1d","name":"","output":true,"outputs":1,"x":480,"y":460,"wires":[["f2a8c52b.a007e8"]]},{"id":"f2a8c52b.a007e8","type":"debug","z":"b2551e81.163a8","name":"","active":true,"console":"false","complete":"false","x":679.5,"y":460,"wires":[]},{"id":"c8615897.6f9b38","type":"debug","z":"11d79ac7.6abe25","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":950,"y":100,"wires":[]},{"id":"69f03120.85869","type":"http in","z":"11d79ac7.6abe25","name":"post data","url":"localhost:1880/query","method":"post","upload":false,"swaggerDoc":"","x":100,"y":100,"wires":[["a29debfa.776448","a08a1104.856fb"]]},{"id":"a29debfa.776448","type":"http response","z":"11d79ac7.6abe25","name":"response","statusCode":"200","headers":{},"x":350,"y":220,"wires":[]},{"id":"a08a1104.856fb","type":"json","z":"11d79ac7.6abe25","name":"","property":"payload","action":"","pretty":false,"x":310,"y":100,"wires":[["a7ad0fb7.508fb"]]},{"id":"a7ad0fb7.508fb","type":"function","z":"11d79ac7.6abe25","name":"add timestamp","func":"msg.payload[\"timestamp\"] = Date.time();\nreturn msg;","outputs":1,"noerr":0,"x":530,"y":100,"wires":[["3d42bb1a.2aebe4"]]},{"id":"3d42bb1a.2aebe4","type":"postgres","z":"11d79ac7.6abe25","postgresdb":"6f969198.b8f1d","name":"","output":true,"outputs":1,"x":740,"y":100,"wires":[["c8615897.6f9b38"]]}]